{"id":147,"date":"2011-04-06T06:00:43","date_gmt":"2011-04-05T22:00:43","guid":{"rendered":"http://192.168.5.119/2.2/?p=147"},"modified":"2011-04-06T06:00:43","modified_gmt":"2011-04-05T22:00:43","slug":"ahk-strokeit","status":"publish","link":"https://xbeta.info/ahk-strokeit.htm","title":{"rendered":"合理使用AutoHotkey+StrokeIt"},"content":{"rendered":"<p><img decoding=\"async\" style=\"FLOAT: left; MARGIN: 4px\" src=\"https://img.xbeta.info/ahk_strokeit.gif\" alt=\"\" width=\"219\" height=\"114\" /><span style=\"“color: red”;\">xbeta注：</span>在追求操作快捷与自动化的路上，有3款软件不得不提：超小的快捷键神兵<strong>hoekey</strong>，超小的鼠标手势之王<strong>StrokeIt</strong>，此外还有更富扩展性的<strong>AutoHotkey</strong>。前二者长于调用，而后者则强于功能。将两类软件结合在一起，双剑合璧，会有何等效果呢？且看dyseat网友的做法！</p>\n<p>下文转载自<a href=\"http://ddandyy.javaeye.com/blog/144536\" target=\"_blank\">dyseat文章</a>，xbeta略有修改。</p>\n<h2>《合理使用AutoHotKey+StrokeIt》</h2>\n<p>工作中总是有一些重复的动作要做。操作的次数多了，就想找点自动完成之类的东西。找来找去，选中了<a href=\"http://www.autohotkey.com/\" target=\"blank\">Autohotkey</a>。虽然内存占用比hoekey大了一点点，不过功能比hoekey要多一些，可完成的动作也要多一些。相比之下，还是可以接受的。</p>\n<p>我的Autohotkey的ini文件所有动作全是自己做成的，一般来说分两部分：输出字段、实现动作。</p>\n<h3>1. 输出字段：让AHK自动输出日期时间</h3>\n<p>工作中，经常会遇到需要输入当前系统时间的情况。你会怎么做呢？<br />\n① 数字键直接输入：这是最简洁的办法，但也是最低效的。<br />\n② 输入法：目前多数输入法都支持输入当前（或指定）日期，并支持不同格式。但对于同时使用多种输入法的朋友来说，要保持一致的体验，并非易事——比如，要输入当前日期，有的输入法要键入dqrq，有的则要键入date。笔者经常使用中英日3种输入法，根本就放弃了这一想法。<br />\n③ AutoHotkey输入：虽然要编写代码，但输出格式、触发方式可完全自定义，也超越了输入法的限制。代码如下：</p>\n<p>代码示例1：按下 /dd ，输出 YYYY-MM-DD HH:MM:SS</p>\n<blockquote><p>::/dd::<br />\nd = %A_YYYY%-%A_MM%-%A_DD% %A_Hour%:%A_Min%:%A_Sec%<br />\nclipboard = %d%<br />\nSend ^v<br />\nreturn</p></blockquote>\n<p>代码示例2：按 /rs 输出 MMDD</p>\n<blockquote><p>::/rs::<br />\nd = %A_MM%%A_DD%<br />\nclipboard = %d%<br />\nSend ^v<br />\nreturn</p></blockquote>\n<h3>2. AHK实现动作</h3>\n<p>目前为止，只写了一个，是用来控制becky的。因为工作都是用mail联系的，平均一天要收50+的mail。所以经常要打开、最小化becky。一天重复N次，虽然说不麻烦，也都只是鼠标点一下。不过要移动鼠标到特定的点进行点击，所以还是要浪费一些脑细胞的。所以写了这个东西，检查becky是否打开。如果没有就打开，如果打开就判断是否激活；如果没有就激活，如果已经激活就最小化。好像QQ的Ctrl+Alt+Z 功能一样，而且比那个功能还好。按一下出来，再按一下还能回去！方便啊！</p>\n<p>代码如下：</p>\n<blockquote><p>^!#a::<br />\nIfWinNotExist, xxxxx &#8211; Becky!<br />\n;判断becky是否启动<br />\nRun,c:\\SystemTools\\Becky_jp\\B2.exe<br />\n;没启动则启动becky<br />\nElse<br />\n{<br />\nIfWinActive, xxxxx &#8211; Becky!<br />\n;启动的话则判断becky窗口是否激活<br />\nWinMinimize,<br />\n;激活的话就最小化<br />\nElse<br />\nWinActivate,<br />\n;没激活的话就激活<br />\n}<br />\nreturn</p></blockquote>\n<h3>3. 让 StrokeIt 调用 AHK</h3>\n<p>本来用上面这些就应该差不多了&#8230;&#8230;..  不过既然已经懒了就想更懒点&#8230;.  这个还是要点键盘的&#8230;..而有的时候如果手不在键盘上就要挪过来然后点然后在挪回去这个&#8230;&#8230;  对懒人来说是无法忍受的. 还好还好鼠标几乎是不离手的恩&#8230;..那当然是立刻想到用<a href=\"http://www.tcbmi.com/strokeit/downloads.shtml\" target=\"blank\">StrokeIt</a>了.</p>\n<p>其实StrokeIt本身也有一些不错的功能的不过毕竟还是有限的哪有AHK强大我现在的做法是能用StrokeIt本身功能的就用不能用的就写到AHK里然后用StrokeIt调用AHK的快捷键这样一来&#8230;..真的是方便啊&#8230;..</p>\n<p>经过如下配置：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/ahk_strokeit_2.png\" border=\"1\" alt=\"StrokeIt调用AHK\" width=\"489\" height=\"409\" /></p>\n<p>最终效果是：<br />\n&#8211; 鼠标右下一拉 becky显示 再右下一拉 becky隐藏<br />\n&#8211; 向右一拉 输出 MMDD<br />\n&#8211; 拉个D 输出 YYYY-MM-DD HH:MM:SS<br />\n&#8211; 向左下拉 当前窗口最小化<br />\n&#8211; 向右上拉 显示刚才最小化的那个窗口 (我是用他调用 Alt+Shift+Tab 来做到的)<br />\n&#8211; 还有一些&#8230;.是定义在特定窗口里的&#8230;<br />\n而且这样用还有一个好处：想用鼠标调用就用鼠标调用，不想用鼠标调用，也可以直接用键盘调AHK。两边都不影响。（正文完）</p>\n<p>附1：相关链接<br />\n<a href=\"http://xbeta.info/autohotkey-guide.htm\" target=\"_blank\">AutoHotkey 0级入门教程:让重复工作一键完成</a><br />\n<a href=\"http://blog.sina.com.cn/s/blog_46dac66f01000buy.html\" target=\"_blank\">[鼠标手势StrokeIt]一鼠走天下－兼谈电脑操作的便捷性</a></p>\n<p>附2：更新历史<br />\n2011-04-11：更新图片；解释输出日期为什么没用输入法。></iframe></p>\n","protected":false},"excerpt":{"rendered":"<p>xbeta注：在追求操作快捷与自动化的路上，有3款软件不得不提：超小的快捷键神兵hoekey，超小的鼠标手势之 [&hellip;]</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":["快捷操作","未分类","系统工具"],"tags":["AutoHotkey","StrokeIt","all"],"_links":{"self":[{"href":"https://xbeta.info/wp-json/wp/v2/posts/147"}],"collection":[{"href":"https://xbeta.info/wp-json/wp/v2/posts"}],"about":[{"href":"https://xbeta.info/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/comments?post=147"}],"version-history":[{"count":0,"href":"https://xbeta.info/wp-json/wp/v2/posts/147/revisions"}],"wp:attachment":[{"href":"https://xbeta.info/wp-json/wp/v2/media?parent=147"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/categories?post=147"},{"taxonomy":"post_tag","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/tags?post=147"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]},"wp_type":"post"}