{"id":1106,"date":"2010-08-16T07:00:35","date_gmt":"2010-08-15T23:00:35","guid":{"rendered":"http://xbeta.info/?p=1106"},"modified":"2010-08-16T07:00:35","modified_gmt":"2010-08-15T23:00:35","slug":"vim73b","status":"publish","link":"https://xbeta.info/vim73b.htm","title":{"rendered":"Vim 7.3正式版：新功能介绍（附视频、中文帮助文件）"},"content":{"rendered":"<p>2010年8月15日，超级经典的文本编辑器 Vim（<a href=\"http://www.vim.org/\">官网</a>｜<a href=\"http://blog.sina.com.cn/s/blog_46dac66f010005kw.html\">介绍</a>） 发布了 7.3 正式版。本文试对Vim 7.3的一些特性进行分析和直观介绍。欢迎Vim爱好者补充指正。<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/vim73b.png\" alt=\"gvim: text editor\" /></p>\n<h2>1. Vim 7.3 新特性总体介绍</h2>\n<h3>1.1 Vim 7.3 下载</h3>\n<p>gVim 7.3 Windows直接下载：<a href=\"http://ftp.vim.org/pub/vim/pc/gvim73.exe\">http://ftp.vim.org/pub/vim/pc/gvim73.exe</a><br />\n更多下载：<a href=\"http://www.vim.org/download.php\">http://www.vim.org/download.php</a></p>\n<h3>1.2 升级安装注意事项</h3>\n<p>&#8211; 安装程序会自动卸载旧版Vim：如果你不放心，也可暂不卸载。<br />\n&#8211; 安装程序会询问是否保留vimfiles：当然要保留！</p>\n<h3 id=\"help-cn\"><span style=\"color: red;\">更新：中文帮助文件</span></h3>\n<p>Vim 7.3 的中文帮助文件已经发布，下载、使用如下：<br />\n&#8211; 下载：<a href=\"http://www.newsmth.net/bbscon.php?bid=731&amp;id=57199\">链接</a>。<br />\n&#8211; 解压到合适路径，如 d:\\soft\\Vim\\vimfiles\\doc\\<br />\n&#8211; 更新帮助文件的tags，如：:helptags d:\\soft\\Vim\\vimfiles\\doc\\<br />\n&#8211; 测试新特性的中文帮助，如 :h &#8216;rnu&#8217;@cn</p>\n<h3>1.3 官方重点强调的新特性：</h3>\n<p>The biggest additions since 7.2:<br />\n&#8211; Persistent undo, undo for reload<br />\n&#8211; Blowfish encryption, also encrypt the swap file<br />\n&#8211; Conceal text (note: since 7.3a &#8216;conc&#8217; was renamed to &#8216;cole&#8217;)<br />\n&#8211; Lua interface<br />\n&#8211; Python 3 interface</p>\n<h3>1.4 更多新特性</h3>\n<p>请在安装新版Vim后，运行 :ver 查看。</p>\n<h2 id=\"conceal-text\">2. 隐藏文字(Conceal text)</h2>\n<p>Vim支持语法高亮，有的语法高亮需要一些额外的标注符，它们并不是文本内容的一部分。比如<a href=\"http://xbeta.info/vim-voof.htm\">用VOoM实现带折叠的双栏树状文本管理</a>时，需要用 {{{1、{{{2 这样的符号表示标题级别。这些额外的标注符，最好比较低调。比如，上文就采用了零宽断言（:h zero-width）或contain来区分标注符，然后用link 到 ignore（文字前景色=背景色）的方式来“不显示”。但这里的不显示，只是一种前背景同色的障眼法。相比之下，Vim 7.3的conceal text具备了更强大的功能；某种程度上，相当于inline folding。</p>\n<h3>2.1 conceal text 功能介绍</h3>\n<p>Conceal text，直译为“隐藏文字”。不过，译为“可隐藏文字”更符合原意。因为，它的最终效果——是否隐藏、如何隐藏——取决于如下属性/参数：</p>\n<p><strong>① syn命令的conceal参数</strong><br />\n语句：sy match test_conceal &#8220;(善用佳软.*)&#8221; conceal<br />\n表示：括号内以善用佳软开头的字符串，命名为 test_conceal 组，具备了conceal属性。<br />\n更多参见：:h conceal</p>\n<p><strong>② conceallevel(简称cole)选项值</strong><br />\n具备conceal属性的字符串，并不一定是隐藏的。其具体表现取决于conceallevel的值。<br />\n☆ 0：默认值，显示。 因此，只设定conceal，并没有任何隐藏效果。<br />\n☆ 1：短线高亮。 匹配的字符串缩略显示为一个“-”符号（取决于listchars设定），并采用conceal组的高亮方案。<br />\n☆ 2：不显示，除非定义了cchar变量。 举个例子就明白了，如下语句<br />\n:syntax match Entity &#8220;&amp;amp;&#8221;?conceal cchar=&amp;<br />\n可以把实体字符显示为原字符，更易于阅读。<br />\n☆ 3：完全不显示。<br />\n更多参见：:h cole</p>\n<p><strong>③ concealcursor(简称cocu)参数</strong><br />\n该值默认为空，效果就是无论如何隐藏，当光标位于该行时，conceal文字仍会显示。<br />\n如果想取消此效果，可设定相应值：n v i c。vim帮助文件中的设定值为nc。<br />\n更多参见：:h cocu</p>\n<h3 id=\"conceal-eg\">2.2 conceal text 应用举例</h3>\n<p>上面的文字已经隐含了两个例子：<br />\n&#8211; 任何额外标记符的隐藏，如Voom中的 {{{1。还可扩展到vim的帮助文件、<a href=\"http://xbeta.info/vimwiki.htm\">vimwiki</a>……<br />\n&#8211; html源代码中，实体字符的还原显示。</p>\n<p>我能想到的例子：<br />\n&#8211; 用来背单词。比如把英文单词后面的所有释义设为隐藏；光标移在该行时，再显示释义。<br />\n&#8211; txt格式的读书笔记：参见下面的<a href=\"http://xbeta.info/vim73b.htm#swf\">视频</a>。<br />\n&#8211; <span id=\"z-hidetag\" style=\"color: #ff0000;\">隐藏 xml/html 标签，只显示文字</span>。示例：</p>\n<blockquote><p>1、如下内容保存为 d:\\1.vim<br />\nsy match tag_conceal &#8220;&lt;.\\{-}&gt;&#8221; conceal<br />\nse cole=3<br />\n2、打开html文件，再 :so d:\\1.vim ，成功：所有html tag标签隐藏，只显示文字。<br />\n3、副作用是原html高亮失效，或许通过其他conclude, transparent参数能控制，但无精力/兴趣继续研究。</p></blockquote>\n<h2>3. 相对行号（&#8217;relativenumber&#8217; &#8216;rnu&#8217;）</h2>\n<p>以前，输入 :set nu 会显示行号；现在，输入 :set rnu 会显示相对行号。<br />\n所谓相对行号，就是光标所在行为第0行，然后，向上向下分别1、2、3……行标示。<br />\n其主要用途，可方便计算移动距离。<br />\n但由于翻页/滚屏时，当前行会移动，所以，相对行号只能在一屏内使用。<br />\n操作方法：<br />\n:set rnu<br />\n:set nornu<br />\n（nu与rnu不能同时使用）</p>\n<p>更多说明：:h rnu</p>\n<h2>4. 彩色列（colorcolumn）</h2>\n<p>例1：<br />\n:set cc=10,20,30<br />\n表示把第10、20、30列，进行高亮。</p>\n<p>例2:<br />\n:set cc=-20,+10,120<br />\n表示把 textwidth-20、textwidth+10、第120列，进行高亮。</p>\n<p>例3:<br />\n:hi colorcolumn guibg=lightgreen<br />\n定义高亮列为亮绿色。</p>\n<p>功能说明：<br />\n&#8211; cc列标可以是绝对值，也可以是相对值，如例2所示。<br />\n&#8211; 会降低屏幕刷新速度。<br />\n&#8211; 对换行、中文，可能会不连续。</p>\n<p>使用说明：<br />\n&#8211; 我觉得colorcolumn有一个最实用的功能，set cc=81，可以提醒自己写得代码别超过80列 （by ankyhe）</p>\n<h2>5. 持久性撤销 <span style=\"color: red;\">(更新)</span></h2>\n<p>功能介绍：<br />\nVim此前的撤销(u: undo)功能，与大多数软件一样，局限于本次打开文件后所做的编辑。而Vim 7.3新增的持久性撤销（persistence undo），即使文件多次关闭又重新打开编辑，所有的修改都可以u还原回去（当然不能超过&#8217;undolevel&#8217;的限制）。</p>\n<p>相关参数：<br />\n&#8211; :set undofile。 undofile(udf)，缺省关闭，局部于缓冲区。设定后，Vim 在把缓冲区写入文件时，自动保存撤销历史到撤销文件。读入文件到缓冲区时，自动恢复撤销历史。<br />\n&#8211; &#8216;undolevels'(&#8216;ul&#8217;)：可以撤销的最大改变次数。缺省为100或1000。例 set ul=500。<br />\n&#8211; 指定 undodir。&#8217;undodir&#8217;指定撤销文件存放的目录。默认是当前目录，为全局变量。 undodir可以是目录名列表，以逗号分隔，格式参见 backupdir。但是，在写入时，会使用第一个存在的目录。因为 &#8220;.&#8221; 总是可用， 所以&#8221;.&#8221; 之后的目录不会用来写入。在读取修改历史时，会查找所有的项目来寻找对应的撤销文件，并使用第一个找到的撤销文件。如果该文件不可读，报错，但不再继续查找。</p>\n<p>关于撤销文件：<br />\n文件名：&#8221;.&#8221; 代表文件所在的目录。此时，&#8221;file.txt&#8221; 对应的撤销文件名是 &#8220;.file.txt.un~&#8221;。如使用其他目录，撤销文件名是被编辑文件的完整路径，但路径分隔符以 &#8220;%&#8221;代替。<br />\n文件保护：撤销树文件中会包含这个文件内容的hash值，这样当一个文件有了撤销树文件后，如果它被其他程序编辑过，Vim会忽略撤销树文件，而不会因此让撤销使文件乱掉。<br />\n不会自动删除： 目前Vim只会去创建撤销树文件，而永远不会去删除它们，需要手动删除。因此，我只好把它们放到自己的tmpfs临时目录中，关机自动清除好了。</p>\n<p>原有命令的增强:earlier和:later：<br />\n这两个命令也增加了一个单位：f——写入次数。比如说，我打开了一个配置文件，编辑N久，保存并测试后不满意，想恢复到原来的样子。怎么办呢？以前我会一直按着u键直到Vim告诉我不能撤销了，或者用备份文件（*~）来覆盖当前文件。现在可以使用命令:earlier 1f直接恢复到上次写入时了。</p>\n<p>如何只对某些类型的文件启用undofile：<br />\n-通过 BufReadPre autocmd 方式进行设定。<br />\n-使用现成的 <a href=\"http://www.vim.org/scripts/script.php?script_id=3198\">undofile.vim</a> 脚本。</p>\n<h2>6. +cursorbind</h2>\n<p>在比较文件的时候，有个scrollbind功能，可以让被比较的文件同步滚动。但是，在之前的版本中，光标经常并不在同一行。从一个窗口跳转到另一个窗口时，我经常找不到光标的位置了。。。现在好了，有了这个特性，光标的位置也同步了。</p>\n<h2>7. 是否升级到Vim 7.3的考虑</h2>\n<p><strong>收益：</strong><br />\n&#8211; 客观上，提供了新特性；<br />\n&#8211; 主观上，需要判断这些新特性是否是自己所需要的。</p>\n<p><strong>成本：</strong><br />\n&#8211; 下载、升级；<br />\n&#8211; 修改gvim路径，从vim72改为vim73。比如：TC中F4编辑器的设定；再比如win+r某些快捷方式的属性（“D:\\soft\\Vim\\vim73\\gvim.exe -p &#8211;remote-tab-silent f:\\now\\now\\now.htm”）。更好的设置方式是把gvim.exe所在目录写入path变量，在引用时不加路径，直接写为gvim.exe（可以带参数）。<br />\n&#8211; python兼容性问题。vim7.2对应python2.6，而vim7.3默认需要python2.7，如果某些扩展需要python支持，则需要升级python。</p>\n<p><strong>我的建议：</strong><br />\n总有一款程序让你如此信任，而随着它同步升级。对我而言，Vim就是如此。</p>\n<h2 id=\"swf\">附：视频演示-Vim 7.3 新特性之Conceal text、rnu、cc</h2>\n<p><a href=\"http://xbeta.info/free-wink.htm\">用Wink录制</a>的flash演示：492&#215;451, 100+KB.<br />\n如无法查看，请检查浏览器设置，或在<a href=\"http://www.newsmth.net/bbscon.php?bid=731&amp;id=56999\">这里</a>下载附件。<br />\n<object width=\"492\" height=\"451\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\"><param name=\"src\" value=\"https://img.xbeta.info/vim73b.swf\" /><param name=\"wmode\" value=\"transparent\" /><param name=\"quality\" value=\"low\" /><embed width=\"492\" height=\"451\" type=\"application/x-shockwave-flash\" src=\"https://img.xbeta.info/vim73b.swf\" wmode=\"transparent\" quality=\"low\" /></object></p>\n<h3 id=\"post-update\">附：文章更新历史</h3>\n<p>2012-06-07：补充 隐藏html标签。<br />\n2010-08-16：更新至 vim 7.3 正式版；补充 undofile.vim 脚本；补充<a href=\"#help-cn\">中文帮助</a>。<br />\n2010-08-01：初稿。<br />\n鸣谢：<a title=\"Vim7.3 beta体验手记\" href=\"http://lilydjwg.is-programmer.com/posts/19527.html\">依云</a>、<a href=\"http://www.newsmth.net/bbsqry.php?userid=ankyhe\">ankyhe</a>、yeskky等。</iframe></p>\n","protected":false},"excerpt":{"rendered":"<p>2010年8月15日，超级经典的文本编辑器 Vim（官网｜介绍） 发布了 7.3 正式版。本文试对Vim 7. [&hellip;]</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":["1.2 文本编辑","未分类"],"tags":["gvim","wink","all"],"_links":{"self":[{"href":"https://xbeta.info/wp-json/wp/v2/posts/1106"}],"collection":[{"href":"https://xbeta.info/wp-json/wp/v2/posts"}],"about":[{"href":"https://xbeta.info/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/comments?post=1106"}],"version-history":[{"count":0,"href":"https://xbeta.info/wp-json/wp/v2/posts/1106/revisions"}],"wp:attachment":[{"href":"https://xbeta.info/wp-json/wp/v2/media?parent=1106"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/categories?post=1106"},{"taxonomy":"post_tag","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/tags?post=1106"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]},"wp_type":"post"}