{"id":1147,"date":"2010-11-11T03:02:21","date_gmt":"2010-11-10T19:02:21","guid":{"rendered":"http://xbeta.info/?p=1147"},"modified":"2010-11-11T03:02:21","modified_gmt":"2010-11-10T19:02:21","slug":"editplus_java","status":"publish","link":"https://xbeta.info/editplus_java.htm","title":{"rendered":"第三篇 打造JAVA开发环境——EditPlus篇"},"content":{"rendered":"<p>《打造JAVA开发环境——EditPlus篇》是 <a href=\"http://xbeta.info/texteditor.htm\" target=\"_blank\">打造全能的文本编辑器序列</a> 的第三篇。介绍了在EditPlus中集成Java编译器、Java运行工具、Ant工具、Tomcat服务器、getter和setter方法生成器“插件”等内容。</p>\n<p>笔者polaris一直在做JAVA开发，因而，对于个人常用编辑器，都会介绍如何打造jAVA开发环境。如果您是非JAVA程序员，一样能够参照着很方便地配置一个适合您的开发环境。下面让我们开始使用EditPlus搭建JAVA开发环境。</p>\n<p>其实在文章<a href=\"http://www.beijixing001.com/?p=325\" target=\"_blank\">《EditPlus使用技巧集萃》</a>中已经介绍了如何在EditPlus中集成编译运行程序（包括多种语言的），在此稍微再重复一下。</p>\n<p>EditPlus其实没有实际意义上的插件，它通过调用外部工具来达到扩展的目的，这就是工具的集成。操作是：通过《工具》菜单——《配置用户工具》来实现（最新版本3.2）。具体配置选项如图：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_1.png\" alt=\"EditPlus\" /><br />\n具体设置步骤：<br />\n① 设置组名称，这里也可以不设置<br />\n② 单击“添加工具→应用程序”按钮并进行如下设置<br />\n③ 各种类似&#8221;$(FilePath)&#8221;的参数可以在文本框右侧的箭头下拉菜单中获取，具体含义如下：<br />\n┌──────────────────────────────────┐<br />\n│参数 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 描述 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?│<br />\n├──────────────────────────────────┤<br />\n│$(FilePath) 文件路径（文件全名，含目录和文件名）│<br />\n├──────────────────────────────────┤<br />\n│$(FileDir) ? ? ? ? ? ? ? ? 文件目录（不带文件名） ? ? ? ? ? ? ? ? │<br />\n├──────────────────────────────────┤<br />\n│$(FileName) ? ? ? ? ? ? ? ?文件名（不带目录） ? ? ? ? ? ? ? ? ? ? │<br />\n├──────────────────────────────────┤<br />\n│$(FileNameNoExt) 不带扩展名的文件名（不带目录） │<br />\n├──────────────────────────────────┤<br />\n│$(FileExt) ? ? ? ? ? ? ? ? ? ? ? 扩展名（当前文件） ? ? ? ? ? ? ? ? ? ?│<br />\n├──────────────────────────────────┤<br />\n│$(ProjectName) ? ? ? ? ? ? 工程名称（当前工程名） ? ? ? │<br />\n├──────────────────────────────────┤<br />\n│$(CurLine) ? ? ? ? ? ? ? 当前行号（光标位置处的行号） ? ?│<br />\n├──────────────────────────────────┤<br />\n│$(CurCol) ? ? ? ? ? ? ? ?当前列号（光标位置处的列号） ? ? │<br />\n├──────────────────────────────────┤<br />\n│$(CurSel) ? ? ? ? ? ? ? ? ? ?当前文本（插入当前选定文本）          │<br />\n├──────────────────────────────────┤<br />\n│$(CurWord) ? ? ? ? ? ? ? ? ? ?当前单词（插入当前单词） ? ? │<br />\n├──────────────────────────────────┤<br />\n│$(WindowList) ? ? 显示当前窗口列表并选择特定文件    │<br />\n└──────────────────────────────────┘<br />\n先秀一下polaris的EditPlus，呵呵：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_2.png\" alt=\"EditPlus\" width=\"800px\" height=\"468px\" /><br />\n还算漂亮吧。</p>\n<h2>1 集成Java编译器</h2>\n<p>菜单文本：Java 编译器<br />\n命令：c:\\java\\bin\\javac.exe<br />\n参数：$(FilePath)<br />\n初始目录：$(FileDir)<br />\n捕获输出：选中</p>\n<p>如图：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_4.png\" alt=\"EditPlus\" /><br />\n（polaris定义了一个组名，EditPlus可以集成大量外部工具，且允许对它们进行分组）</p>\n<p><strong>感谢dofy提醒：$(FilePath) 两边最好加上双引号, 否则如果路径有空格就执行不了了</strong></p>\n<h2>2 集成Java运行工具</h2>\n<p>要运行已编译的 Java 类文件，你可以进行如下设置：<br />\n菜单文本：Java<br />\n命令：c:\\java\\bin\\java.exe<br />\n参数：$(FileNameNoExt)<br />\n初始目录：$(FileDir)<br />\n捕获输出：选中</p>\n<p>如图：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_5.png\" alt=\"EditPlus\" /><br />\n注意“参数”与配Java编译器的不同。</p>\n<p>注意：“命令”部分应当替换为您实际的 Java 解释器的路径。如果您配置了JAVA_HOME与PATH变量，直接输入javac或java就可以了，不需要完整路径。</p>\n<p>EditPlus有一个地方做的比较好，就是在编译或运行后出现了错误，在输出窗口中，双击错误会定位到源代码处。不过有时候定位不了，比如JAVA API的类等。但相比其他同类软件，EditPlus还是做的挺好的。</p>\n<p>另外，上面方法实际上只能编译运行没有包名的类。我尝试过很多方法，想让其能够编译运行带包的类，如：编译时加入&#8221;-d&#8221;参数，然而运行时候会很麻烦，我通过写一个BAT脚本来进行，这当然很不好，所以在此就不详细介绍。大家有兴趣可以自己研究有没有其他方法，有什么好的方法留言分享一下。</p>\n<h2>3 集成Ant工具，打造真正的JAVA环境</h2>\n<p>由于编译与运行经常使用，因而将这两项功能单独集成，集成方式跟集成Java工具一样。如图：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_6.png\" alt=\"EditPlus\" /><br />\n运行：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_7.png\" alt=\"EditPlus\" /><br />\n既然使用了ant，当然会有其他众多task，比如打jar包、war包、生成javadoc等。这个时候可以进行如下配置：<br />\n菜文本：ant其他目标<br />\n命令：D:\\Program Files\\apache-ant-1.8.1\\bin\\ant.bat -f<br />\n参数：$(FilePath) $(Prompt)<br />\n初始目录：$(FileDir)<br />\n捕获输出：选中</p>\n<p>如图：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_8.png\" alt=\"EditPlus\" /><br />\n当写好build.xml文件后，在打开的情况下（且是当前活动的文档）执行“工具”——“ant其他目标”（您可以自定义快捷方式，默认也会提供快捷方式），这时会出现如下对话框：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_16.png\" alt=\"EditPlus\" /><br />\n在输入框中输入想要执行的目标task，即可达到相应的目的。这样，就可以通过EditPlus达到构建工程的目的。</p>\n<h2>4 集成Tomcat服务器</h2>\n<p>集成Tomcat服务器很简单，其实只是调用一个外部工具而已。如图：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_10.png\" alt=\"EditPlus\" /><br />\n注意选中“隐藏运行”,要不然EditPlus输出窗口会一直等待Tomcat停止运行，“工具”菜单栏中的其他自定义工具也无法使用了。</p>\n<h2>5 getter和setter方法生成器“插件”</h2>\n<p>“插件”之所以打上引号，之前说过，EditPlus没有真正意义上的插件，这里只是通过其提供的调用外部工具来实现的。</p>\n<p>这个功能不是polaris自己实现的，网上有人实现了。在这里引用一下，在原文基础上有修改：（由于该文很多地方引用了，不知道原地址与原作者，有如侵权，请告知；同时，由于原文代码有点长，两个代码文件提供下载，在文中不贴出来了。）</p>\n<p>一直很不习惯用Eclipse，觉得那家伙功能太花哨又笨重。还是喜欢用EditPlus手写，几乎平时的开发都用EditPlus，但有时又需要借助Eclipse生成JavaBean的get、set方法。那现在自己写一个JavaBean代码生成器插件，在EditPlus里调用。</p>\n<p>首先是编写 BeanGenerator.java类</p>\n<p>然后是 BeanInfo.java类</p>\n<p>完成之后，编译打成可运行的jar包（不会打包的可以上网搜索或留言），推荐将该JAR包放入EditPlus根目录的plugins目录中（没有plugins目录，可以自己创建）。</p>\n<p>接下来需要配置CLASSPATH环境变量，如图：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_11.png\" alt=\"EditPlus\" /><br />\n注意，在配置该变量时，记得在最前面加上“.;”，否则命令行方式运行java命令会抛异常：找不到类。具体原因可以参考<a title=\"Java环境变量配置问题\" href=\"http://www.beijixing001.com/?p=496\" target=\"_blank\">《Java环境变量配置问题》</a>。</p>\n<p>下面便是将其集成到EditPlus中来：</p>\n<p>配置完之后，在“工具”菜单中就出现了相应的子菜单（BeanGenerator）：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_12.png\" alt=\"EditPlus\" /><br />\n这时，可以写一个简单的JavaBean测试一下：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_13.png\" alt=\"EditPlus\" /><br />\n执行BeanGenerator，或按快捷键，生成的getter、setter方法如图：<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/editor/editplus_java_14.png\" alt=\"EditPlus\" /><br />\n（注：上面两个类你可以自行修改，以符合你的习惯，如大括号的缩进方式等，polaris的跟原作者的就略有不同。）</p>\n<p>至此，插件的编写与配置全部完成。</p>\n<p>有一点提醒一下，上面两个类的编码方式是GB2312，所以，您要生成Bean的文件也应该为GB2312编码。当然你可以换用其他编码，不过两者要一样，否则生成的注释会乱码。</p>\n<h2>6 总结</h2>\n<p>就我个人而言，觉得EditPlus在很多方面都很优秀。通过上面的配置，EditPlus已经变成一个类IDE了。就编程而言，EditPlus提供了众多且很优秀的语法高亮的功能（在官网上几乎可以下载到所有你想要的语法高亮文件，或者你可以自己定义，见《第二篇 简洁但功能强大的EditPlus——我的最爱》之 <a href=\"http://xbeta.info/editplus_mylove.htm#toc4\" target=\"_blank\">第四部分——自定义语法文件</a>），在这方面，我觉得远远超过UltraEdit，UltraEdit支持的语法高亮不是很好，比如XML（Ant的）；然而，有几个方面，我认为EditPlus不是太好：</p>\n<p>（1）不支持代码提示功能，代码自动完成功能也很弱；<br />\n（2）没法很好的对文本文件（Text）进行语法高亮。我曾试过自己定义Text的语法高亮文件，但效果很不理想。这让我不是很爽，而Vim有一个插件使其有该功能；<br />\n（3）不能在程序中跳转。大部分的文本编辑器都没有提供该功能，有些文本编辑器提供了，后面会有介绍。</p>\n<p>由于存在这些问题，有必要寻找一款在这些方面做得更好的编辑器来补充EditPlus。在写此文时，我已经找到了一款能够大概满足我要求的，当然不是指Vim，Vim几乎可以满足以上一切要求，然而学习起来不容易，需要长期实践才能够很好的掌握，或者您不想花很多时间学习。那么这款软件到底是啥？之后的文章会详细介绍。</p>\n<p>附：JavaBean代码文件及polaris编译打包好了的jar，<a href=\"http://www.beijixing001.com/post/495.html\" target=\"_blank\">请点击此处下载（在文章最后）</a></p>\n","protected":false},"excerpt":{"rendered":"<p>《打造JAVA开发环境——EditPlus篇》是 打造全能的文本编辑器序列 的第三篇。介绍了在EditPlus [&hellip;]</p>\n","protected":false},"author":9,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":["1.2 文本编辑","未分类"],"tags":["editor","EditPlus","all"],"_links":{"self":[{"href":"https://xbeta.info/wp-json/wp/v2/posts/1147"}],"collection":[{"href":"https://xbeta.info/wp-json/wp/v2/posts"}],"about":[{"href":"https://xbeta.info/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/users/9"}],"replies":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/comments?post=1147"}],"version-history":[{"count":0,"href":"https://xbeta.info/wp-json/wp/v2/posts/1147/revisions"}],"wp:attachment":[{"href":"https://xbeta.info/wp-json/wp/v2/media?parent=1147"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/categories?post=1147"},{"taxonomy":"post_tag","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/tags?post=1147"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]},"wp_type":"post"}