{"id":713,"date":"2009-02-26T08:00:15","date_gmt":"2009-02-26T00:00:15","guid":{"rendered":"http://xbeta.info/?p=713"},"modified":"2009-02-26T08:00:15","modified_gmt":"2009-02-26T00:00:15","slug":"gvim-unicode","status":"publish","link":"https://xbeta.info/gvim-unicode.htm","title":{"rendered":"笔记: gVim同时处理中日韩文"},"content":{"rendered":"<p>gVim处理unicode时，如果设定不正确，可能会无法显示某些字符。<br />\n解决问题的关键，有2点：<br />\n一是编码环境，推荐：set enc=utf-8；<br />\n二是正确的字体，比如要正确显示韩文可选择GulimChe、DotumChe字体。</p>\n<p>我的显示效果，如下图：（Win7、gVim 7.3、2012-11-16）<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/gvim-unicode.gif\" alt=\"[img:gvim unicode]\" /></p>\n<h2>更多说明</h2>\n<p>0.<br />\n多数情况下，我用gvim处理中文，因此，默认enc是prc而非utf-8。临时有需要往往改enc，相对不太关注fenc。[<a href=\"http://www.newsmth.net/bbscon.php?bid=731&#038;id=20845&#038;ftype=11\" title=\"runsnake: windows下乱码解决之法 \">参见</a>]</p>\n<p>1.测试文本</p>\n<blockquote><p>日语（にほんご、にっぽんご）朝鲜语（조선어）或称韩国语（한국어）<br />\n代码 \t\t字符标准名称 \t\t\t显示<br />\n&#65; \t\t大写拉丁字母&#8221;A&#8221; \t\tA<br />\n&#223; \t\t小写拉丁字母&#8221;Sharp S&#8221; \tß<br />\n&#254; \t\t小写拉丁字母&#8221;Thorn&#8221; \tþ<br />\n&#916; \t\t大写希腊字母&#8221;Delta&#8221; \tΔ<br />\n&#1049; \t大写斯拉夫字母&#8221;Short I&#8221; Й<br />\n&#1511; \t希伯来字母&#8221;Qof&#8221; \t\tק<br />\n&#1605; \t阿拉伯字母 &#8220;Meem&#8221; \t\tم<br />\n&#3671; \t泰文数字 7 \t\t\t\t๗<br />\n&#4688; \t埃塞俄比亚音节文字&#8221;Qha&#8221; ቐ<br />\n&#12354; \t日语平假名 &#8220;A&#8221; \t\t\tあ<br />\n&#12450; \t日语片假名 &#8220;A&#8221;\t\t \tア<br />\n&#21494; \t简体汉字 &#8220;叶&#8221; \t\t\t叶<br />\n&#33865; \t正体汉字 &#8220;葉&#8221; \t\t\t葉<br />\n&#50685; \t韩国音节文字 &#8220;Yeob&#8221; \t엽</p></blockquote>\n<p>2.<br />\n中文简体Win XP下，不设定encoding时，相当于cp936: simplified Chinese (Windows only)，支持别名prc, chinese。也就是说，中文简体Win XP下，不设定enc与<br />\nse enc=prc<br />\nse enc=cp936<br />\nse enc=chinese<br />\n是等同的。</p>\n<p>3.<br />\n此环境下，保存txt相当于notepad.exe的ansi。</p>\n<p>4.<br />\nenc=prc下，处理unicode字符能力当然比较弱：默认开一个新文件复制韩文过来，它根本不认识；打开一个utf-8编码多语言的文件，也可能转换出错。</p>\n<p>5.<br />\n所以，处理unicode字符时，<strong>一定要（临时）设为enc=utf-8</strong></p>\n<p>6.<br />\n直接切换到enc=utf-8，GVIM界面会显示乱码，韩文仍无法显示。前者是GVIM调用资源的问题，后者是当前字体不支持韩文（多数中文字体都支持日文）。<br />\n这时，虽显示异常，但不影响实际使用。比如，你仍可以复制/粘贴。</p>\n<p>7.<br />\n如果看起来不舒服，则可以更改显示字体为韩文（代价是中文丑陋）。<br />\nse guifont=* 选择 GulimChe或DotumChe，字符集选韩文（不选似乎也可以）。</p>\n<p>8.<br />\n曾有一段时间，我倾向于选择utf-8，让它成为gvim的enc、文本文件的保存格式、html的编码格式。<br />\n但这种“高”标准化对其他程序并不友好。比如：TC中ctrl+q或F3显示txt文件，进行文件内容比较。另外，对中文而言utf-8编码体积是原默认编码的1.5倍，如果是一篇长网页，差异还是难以忽视的。<br />\n因此，后来我又改回了ansi/gb-2312，除非遇到问题，才选择utf-8。</p>\n<p>9.<br />\n对开发者或应用而言，应支持高标准；对用户或数据而言，采用低标准更为有利。此合于老子“知其雄，守其雌”之道。（完）></iframe></p>\n","protected":false},"excerpt":{"rendered":"<p>gVim处理unicode时，如果设定不正确，可能会无法显示某些字符。 解决问题的关键，有2点： 一是编码环境 [&hellip;]</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":["1 文本办公","1.2 文本编辑","未分类"],"tags":["gvim","all"],"_links":{"self":[{"href":"https://xbeta.info/wp-json/wp/v2/posts/713"}],"collection":[{"href":"https://xbeta.info/wp-json/wp/v2/posts"}],"about":[{"href":"https://xbeta.info/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/comments?post=713"}],"version-history":[{"count":0,"href":"https://xbeta.info/wp-json/wp/v2/posts/713/revisions"}],"wp:attachment":[{"href":"https://xbeta.info/wp-json/wp/v2/media?parent=713"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/categories?post=713"},{"taxonomy":"post_tag","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/tags?post=713"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]},"wp_type":"post"}