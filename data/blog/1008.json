{"id":1008,"date":"2010-03-25T07:43:18","date_gmt":"2010-03-24T23:43:18","guid":{"rendered":"http://xbeta.info/?p=1008"},"modified":"2010-03-25T07:43:18","modified_gmt":"2010-03-24T23:43:18","slug":"vim-txtbrowser","status":"publish","link":"https://xbeta.info/vim-txtbrowser.htm","title":{"rendered":"TxtBrowser: 在Vim中高效处理纯文本(更新)"},"content":{"rendered":"<p>　　<a href=\"http://www.vim.org/scripts/script.php?script_id=2899\">TxtBrowser</a>是一款Vim插件，旨在提供更好的txt浏览体验。主要功能有：为纯文本自动生成目录树侧边栏（taglist窗口）、语法高亮、多项扩展功能（执行url、网络搜索当前词等）。TxtBrowser由国内网友<a href=\"http://guoyoooping.blog.163.com/blog/static/1357051832009112910162389/\">ypguo</a>开发，近期更新活跃，并且<strong>解决了taglist.vim插件不能处理中文文件路径的问题</strong>，值得关注。<br />\n<img decoding=\"async\" src=\"https://img.xbeta.info/vim-txtb.png\" alt=\"TxtBrowser: 在Vim中高效处理纯文本。支持中文路径！\" /></p>\n<h2>一、TxtBrowser功能展示</h2>\n<p>　　以下是功能简介，更多请参见<a title=\"TxtBrowser : 纯文本浏览器(显示文本文件的目录树和语法高亮)\" href=\"http://guoyoooping.blog.163.com/blog/static/1357051832009112910162389/\">作者介绍</a>，以及官方下载包中的 txtbrowser.cnx 文件。<br />\n　　上图展示了目录树功能，更多截屏<a href=\"http://guoyoooping.blog.163.com/album/edit/#m=1&amp;aid=193892890 \">参见此处</a>。</p>\n<h3>1. 目录树侧边栏</h3>\n<p>　　用Vim打开纯文本类型的文件（.txt 或 :se ft=txt），键入一条命令（:Tlist）或按下对应热键（可自定义，示例如下），会生成目录树侧边栏（即taglist窗口）。在目录栏点击相应标签，正文会相应跳转。<br />\n　　目录栏的内容既包括正文目录，也包括图片目录、表格目录，并可进一步自定义。<br />\n　　更新正文后，键入命令（:TlistUpdate）或按下对应热键（可自定义，示例如下），即可刷新目录栏。</p>\n<blockquote><p>:nmap &lt;silent&gt; &lt;F8&gt; &lt;ESC&gt;:Tlist&lt;RETURN&gt;<br />\n:noremap &lt;silent&gt; &lt;F5&gt; &lt;ESC&gt;:TlistUpdate&lt;RETURN&gt;</p></blockquote>\n<h3>2. 语法高亮</h3>\n<p>　　纯文本也可以“多姿多彩”！TxtBrowser可以使关键文字高亮显示，突出显示标题、关键字、列举项。可以提高效率，愉悦心情。通过 :colorscheme colorname 命令，可以尝试不同的着色方案。</p>\n<h3>3. 其他扩展功能</h3>\n<p>　　* 把光标放到 URL上，执行 :TxtbrowserUrl （或 ←leader→g）打开所在处的URL，包括网址、各种文件（包括pdf、mp3等）、Email地址。<br />\n　　* 把光标放到单词上，执行 :TxtbrowserWord （或 ←leader→f）打开网络字典查单词。<br />\n　　* 把光标放到单词上，执行 :TxtbrowserSearch （或 ←leader→s）打开google搜索。</p>\n<h2>二、TxtBrowser点评及与VOOF对比</h2>\n<h3>1. 对TxtBrowser的评价</h3>\n<p>　　我认为，TxtBrowser是值得关注和支持的一款Vim扩展。推荐有需求的网友试用、使用。理由如下：<br />\n　　* TxtBrowser立志要成为vim txt的集成解决方案，无论对编程人员查看技术文档，还是非编程人员记录笔记，都十分有益。<br />\n　　* 作者ypguo系国内网友，诚心听取意见、积极更新程序。<br />\n　　* 非常难得的是，作者从开始使用Vim到写出这款扩展竟然不到两年时间（<a title=\"vim学习笔记1: 为什么用vim\" href=\"http://guoyoooping.blog.163.com/blog/static/135705183201001794414695/\">via</a>）。或许，这也反过来证明了vim的强大和作者的开发功力吧。</p>\n<h3>2. TxtBrowser几项功能的内部比较</h3>\n<p>　　<strong>TxtBrowser插件的最大亮点功能是目录侧边栏</strong>。这对于查看长篇技术文档，或自己做笔记，很有帮助。<br />\n　　至于语法高亮和其他扩展功能，早已经在其他扩展中得以实现。用户可以把TxtBrowser作为txt的集大成解决方案，来使用这些功能。也可以进行自定义、修改，或选用更强大的专门扩展。</p>\n<h3 id=\"txtb-voof\">3. TxtBrowser vs VOOF <span style=\"color:red\">(更新)</span></h3>\n<p><strong>a. 从目录导航功能看，两者差别不大，但运行环境分别需要taglist和python。</strong><br />\n　　从目录导航功能来看，TxtBrowser与VOOF（<a href=\"http://www.vim.org/scripts/script.php?script_id=2657\">主页</a>、<a href=\"http://xbeta.info/vim-voof.htm\" title=\"VOOF：vim 实现带折叠双栏树状文本管理 | 善用佳软\">介绍</a>）算是同类。我认为两者的长处与短处都是相对的，大家可根据自己的需要进行选择。<br />\n　　各有长短：TxtBrowser依赖ctags、taglist；VOOF依赖Python。<br />\n　　TxtBrowser胜出：其标题行来自.ctags文件定义，默认是“数字打头，后跟标题”等这样的形式，不需额外标注。而VOOF需要手工增加{{{这样的标识符。<br />\n　　速度与功能：似乎VOOF的Python更快一些（未做严格测试），并且VOOF可以通过目录栏对正文段落进行前后调整、级别调整。<br />\n　　中文兼容：如果采用官方taglist.vim，则TxtBrowser在Windows下，当文件或路径中含有中文空格时，目录不能正常显示（Linux下正常）。但是，ypguo对taglist.vim进行了修正，解决了此问题。<br />\n<strong>b. TxtBrowser附带了文本辅助功能，而VOOF则具备实用的节点管理功能</strong><br />\n　　TxtBrowser还具备txt语法高亮、快速打开url、搜索、翻译功能。但这些功能与目录功能实际上并无直接关系，也可以拆为两个扩展，或换用其他扩展实现。<br />\n　　VOOF的优势则体现在节点管理上，<strong>VOOF的目录树不仅可以导航，也能进行节点操作</strong>。比如，节点位置的前后移动、提高或降低层级（默认是ctrl+方向键），这对资料库管理是非常实用的。<br />\n<strong>c. 结论是 TxtBrowser适用于阅读txt；VOOF适用于管理txt资料库</strong><br />\n　　从实用选择角度，我认为这两款扩展面向的对象并不相同。TxtBrowser适用于阅读txt，尤其是他人的长文本；而VOOF适用于建立和管理自己的txt资料库，可以有很多节点，并不断调整其结构。</p>\n<h2>三、安装及使用笔记</h2>\n<p><strong>重要说明：</strong>以下内容为xbeta试用<strong>当时</strong>的记录，有些地方<strong>不适用于后续版本TxtBrowser</strong>。比如，taglist插件出了修正版，.ctags文件不再需要……</p>\n<blockquote><p>\n　　说明：编程人员对tag、ctags、taglist都很熟悉。但对于象我这样不编程的用户来说，因为TxtBrowser而第一次安装、使用这些东西，还是比较复杂的。记录如下，并提供对初学者友好地解释。</p>\n<p>1. 安装ctags（<a href=\"http://ctags.sourceforge.net/\">http://ctags.sourceforge.net/</a>）<br />\n　　ctags是一款程序（exe），用来生成tag文件。tag文件可以理解成索引——某个目录项、关键词……出现在哪个文件的哪一行。<br />\n　　下载 Source and binary for Windows 98/NT/2000/XP，即 ctags58.zip。只需要把其中的 ctags.exe（约300KB）解压到 windows 目录（或其他在path的目录）。</p>\n<p>2. 安装taglist（<a href=\"http://www.vim.org/scripts/script.php?script_id=273\">http://www.vim.org/scripts/script.php?script_id=273</a>）<br />\n　　重要说明：由于官方taglist.vim对中文支持有问题，推荐<a href=\"http://www.newsmth.net/frames.html?mainurl=/bbscon.php%3Fbid%3D731%26id%3D54466\">修订版本</a>。<br />\n　　把插件的内容复制到 vim安装目录/vimfiles/中。以我为例，新增如下内容：</p>\n<blockquote><p>d:\\soft\\Vim\\vimfiles\\plugin\\taglist.vim<br />\nd:\\soft\\Vim\\vimfiles\\doc\\taglist.txt</p></blockquote>\n<p>3. 安装TxtBrowser（<a title=\"TxtBrowser : Browse plain text easily(show the title tag and syntax highlight)\" href=\"http://www.vim.org/scripts/script.php?script_id=2899\">http://www.vim.org/scripts/script.php?script_id=2899</a>）<br />\n　　除了大部分内容复制到vimfiles目录，一定要注意 .ctags 文件要复制到 “$Home”目录。$home可以简单地理解为 c:\\Documents and Settings\\用户ID\\。以我为例，新增如下内容：</p>\n<blockquote><p>d:\\soft\\Vim\\vimfiles\\plugin\\txtbrowser.vim （生成目录、扩展功能所用的插件）<br />\nd:\\soft\\Vim\\vimfiles\\doc\\txtbrowser.cnx （帮助文档）<br />\nd:\\soft\\Vim\\vimfiles\\doc\\txtbrowser.txt （帮助文档）<br />\nd:\\soft\\Vim\\vimfiles\\syntax\\txt.vim （语法高亮文件）<br />\nc:\\Documents and Settings\\zyx\\.ctags （重要：定义文件文件中，哪些文本生成tag）</p></blockquote>\n<p>4. 在.vimrc文件里加入：</p>\n<blockquote><p>syntax on<br />\nlet tlist_txt_settings = &#39;txt;c:content;f:figures;t:tables&#39;<br />\nau BufRead,BufNewFile *.txt setlocal ft=txt</p></blockquote>\n<p>5. 重启vim，打开 http://www.rfc-editor.org/rfc/rfc959.txt ，执行命令 :Tlist，应该能看到效果了。\n</p></blockquote>\n<h3 id=\"post-update\">附：文章更新历史</h3>\n<p>　　2010-03-25：更新txtbrowser与VOOF的<a href=\"#txtb-voof\">比较</a>部分；修正一些过时说法。<br />\n　　2010-02-20：更新taglist中文路径问题。<br />\n　　2010-02-16：初稿。<br />\n</iframe></p>\n","protected":false},"excerpt":{"rendered":"<p>　　TxtBrowser是一款Vim插件，旨在提供更好的txt浏览体验。主要功能有：为纯文本自动生成目录树侧边 [&hellip;]</p>\n","protected":false},"author":2,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":["1 文本办公","1.2 文本编辑","未分类"],"tags":["gvim","all"],"_links":{"self":[{"href":"https://xbeta.info/wp-json/wp/v2/posts/1008"}],"collection":[{"href":"https://xbeta.info/wp-json/wp/v2/posts"}],"about":[{"href":"https://xbeta.info/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/users/2"}],"replies":[{"embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/comments?post=1008"}],"version-history":[{"count":0,"href":"https://xbeta.info/wp-json/wp/v2/posts/1008/revisions"}],"wp:attachment":[{"href":"https://xbeta.info/wp-json/wp/v2/media?parent=1008"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/categories?post=1008"},{"taxonomy":"post_tag","embeddable":true,"href":"https://xbeta.info/wp-json/wp/v2/tags?post=1008"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]},"wp_type":"post"}